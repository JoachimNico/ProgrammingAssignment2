library(readr)
dataset <- read_csv(NULL)
View(dataset)
read.table(hw1_data.csv)
read.csv(hw1_data.csv)
read.csv(hw1_data.csv)
ls()
source("myfunction.R")
source("Myfunction.R")
source("myfunciton.R")
myfunction
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- (z-1)^2
mysqrt <- sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- (z/my_sqrt)
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
install.packages("swirl")
library(swirl)
siwrl()
swirl()
5+7
x <- 5+7
x
y <- x -3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + C(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 +100
z * 2 +1000
my_div
swirl()
swirl()
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- function()
1
old.dir <- getwd
old.dir <- getwd()
testdir <- dir.create()
info
dir.create("testdir")
setwd("testdir")
getwd()
file.create("mytest.R")
getwd()
ls()
list.files()
file.exisits()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.exists()
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2") file.path("testdir3")
dir.create("testdir2", file.path("testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd("old.dir")
setwd()
setwd(old.dir)
unlink("testdir)
q
1
unlink()
unlink(testdir)
unlink("testdir")
unlinke("testdir", recursive = TRUE)
unlink("testdir", recursive = TRUE)
library(swirl)
swirl()
5+7
0
library(swirl)
swirl()
1:2
1:20
oi:10
pi:10
15:1
?`:`
seq(1, 10)
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10, lenght=30)
my_seq <- seq(5, 10, lenght=30)
my <- seq(5, 10 length=30)
my_seq <- seq(5, 10 length=30)
my_seq <- seq(5, 10, length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times=20)
rep(c(0, 1, 2), times = 20)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
library(swirl)
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Joachim")
my_name <- c(my_char, "Joachim")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(C(1:3), c("X", "Y", "Z"), sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(lETTERS, 1:4, sep = "-")
paste("lETTERS", 1:4, sep = "-")
paste(lETTERS, 1:4, sep = "-")
paste(lETTERS, 1:4, sep="-")
paste(LETTERS, 1:4, sep="-")
library(swirl)
swirl()
x <- c(44, NA, 5, na)
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.NA(my_data)
my_na <- my_data(is.NA())
is.NA()
my_na <- is-na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1_10]
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
c()
[c(3, 5, 7)]
c(3, 5, 7)
info()
[c(3, 5, 7)]
[3, 5, 7]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 19)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf =NA)
vect
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect[2]
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
)matrix
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patient, my_matrix)
cbind(Patients, my_matrix)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class()
class(my_data)
cnames("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
library(swirl)
swirl()
==
True==True
TEUW==TRUE
TRUW==TRUE
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6>7
6<7
10<=10
5!=7
5 != 7
5 !== 7
5 !== 7
!TRUE 5 == 7
!5==7
FALSE & FALSE
TREU  & c(TRUE, FALSE, FALSE)
TRUE  & c(TRUE, FALSE, FALSE)
TRUE  && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8||6!=8&4>3.9
5 > 8 || 6 != 8 && 4>3.9
isTRUE(6>4)
identical("TWINS", "TWINS")
identical("Twins", "Twins")
identical(Twins, Twins)
identical('Twins', 'Twins')
identical('twins', 'twins')
xor(5==6; !FALSE)
xor(5==6, !FALSE)
ints <- sample(10)
ints()
ints
ints>5
which(7)
which(ints>7)
any(ints<0)
all(ints>0)
library(swirl)
swirl()
sys.date()
Sys.date()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function()
boring_function("My first function!")
boring_function
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
View(my_mean)
submit()
submit()
submit()
submit()
submit()
submit()
info()
skip()
my_mean(c(4, 5, 10))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
swirl()
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
